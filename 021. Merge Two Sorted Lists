#https://leetcode.com/problems/merge-two-sorted-lists/

# Definition for singly-linked list.
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode: 
        merged=ListNode()
        temp=merged  
        while l1 != None or l2 !=None:                    
            if l1 == None:
                temp.next=l2
                break
            elif l2 == None :
                temp.next=l1
                break     
            if l1.val <= l2.val :
                temp.next=ListNode(l1.val) 
                l1=l1.next    
            elif l2.val < l1.val :
                temp.next=ListNode(l2.val)            
                l2=l2.next
            temp=temp.next
        return merged.next
        
'''
Success
Details 
Runtime: 28 ms, faster than 98.11% of Python3 online submissions for Merge Two Sorted Lists.
Memory Usage: 14.4 MB, less than 32.57% of Python3 online submissions for Merge Two Sorted Lists.
'''
